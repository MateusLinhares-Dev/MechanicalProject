# Generated by Django 5.2 on 2025-05-21 23:13

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        ('vehicles', '0002_vehicle_license_plate'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Tipo de Serviço')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('estimated_time', models.IntegerField(default=60, verbose_name='Tempo Estimado (minutos)')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Preço Base')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Tipo de Serviço',
                'verbose_name_plural': 'Tipos de Serviços',
            },
        ),
        migrations.CreateModel(
            name='ServiceOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de Início')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Data de Conclusão')),
                ('status', models.CharField(choices=[('aberto', 'Aberto'), ('em_andamento', 'Em Andamento'), ('aguardando_pecas', 'Aguardando Peças'), ('aguardando_aprovacao', 'Aguardando Aprovação'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado')], default='aberto', max_length=20, verbose_name='Status')),
                ('diagnosis', models.TextField(blank=True, null=True, verbose_name='Diagnóstico')),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Custo Total')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_orders', to='vehicles.vehicle', verbose_name='Veículo')),
            ],
            options={
                'verbose_name': 'Ordem de Serviço',
                'verbose_name_plural': 'Ordens de Serviço',
            },
        ),
        migrations.CreateModel(
            name='PartUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, verbose_name='Quantidade')),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Preço Unitário')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='usages', to='products.product', verbose_name='Produto/Peça')),
                ('service_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parts_used', to='services.serviceorder', verbose_name='Ordem de Serviço')),
            ],
            options={
                'verbose_name': 'Uso de Peça',
                'verbose_name_plural': 'Uso de Peças',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data da Manutenção')),
                ('description', models.TextField(verbose_name='Descrição da Manutenção')),
                ('mileage', models.IntegerField(default=0, verbose_name='Quilometragem')),
                ('next_maintenance_date', models.DateField(blank=True, null=True, verbose_name='Data da Próxima Manutenção')),
                ('next_maintenance_mileage', models.IntegerField(blank=True, null=True, verbose_name='Quilometragem para Próxima Manutenção')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_history', to='vehicles.vehicle', verbose_name='Veículo')),
                ('service_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_records', to='services.serviceorder', verbose_name='Ordem de Serviço')),
            ],
            options={
                'verbose_name': 'Histórico de Manutenção',
                'verbose_name_plural': 'Históricos de Manutenção',
            },
        ),
        migrations.CreateModel(
            name='ServiceSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_date', models.DateTimeField(verbose_name='Data Agendada')),
                ('status', models.CharField(choices=[('agendado', 'Agendado'), ('em_andamento', 'Em Andamento'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado')], default='agendado', max_length=20, verbose_name='Status')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='schedules', to='vehicles.vehicle', verbose_name='Veículo')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='schedules', to='services.servicetype', verbose_name='Tipo de Serviço')),
            ],
            options={
                'verbose_name': 'Agendamento de Serviço',
                'verbose_name_plural': 'Agendamentos de Serviços',
            },
        ),
        migrations.AddField(
            model_name='serviceorder',
            name='schedule',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_order', to='services.serviceschedule', verbose_name='Agendamento'),
        ),
        migrations.CreateModel(
            name='ServiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição do Serviço')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Preço')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('service_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='services.serviceorder', verbose_name='Ordem de Serviço')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_items', to='services.servicetype', verbose_name='Tipo de Serviço')),
            ],
            options={
                'verbose_name': 'Item de Serviço',
                'verbose_name_plural': 'Itens de Serviço',
            },
        ),
    ]
